<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [..\OBJ\LCD.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image ..\OBJ\LCD.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5050169: Last Updated: Wed Feb 28 11:22:10 2018
<BR><P>
<H3>Maximum Stack Usage =        352 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
Switch_state_down &rArr; Equili_Page2_Switch_DOWN &rArr; Switch_Down_Equili_3 &rArr; Color_especial &rArr; Color_Conver &rArr; gui_draw_arcrectangle &rArr; gui_draw_arc &rArr; gui_draw_circle8 &rArr; gui_draw_expoint &rArr; LCD_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[62]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1b]">ADC1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1b]">ADC1_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1b]">ADC1_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[40]">Advance_Delay_A</a> from mic_page2_1.o(i.Advance_Delay_A) referenced from mic_page2.o(i.Switch_Down_Echo_1)
 <LI><a href="#[40]">Advance_Delay_A</a> from mic_page2_1.o(i.Advance_Delay_A) referenced from mic_page2.o(i.Switch_Up_Echo_1)
 <LI><a href="#[44]">Advance_Delay_B</a> from mic_page2_1.o(i.Advance_Delay_B) referenced from mic_page2.o(i.Switch_Down_Echo_1)
 <LI><a href="#[44]">Advance_Delay_B</a> from mic_page2_1.o(i.Advance_Delay_B) referenced from mic_page2.o(i.Switch_Down_Echo_2)
 <LI><a href="#[44]">Advance_Delay_B</a> from mic_page2_1.o(i.Advance_Delay_B) referenced from mic_page2.o(i.Switch_Down_Echo_3)
 <LI><a href="#[44]">Advance_Delay_B</a> from mic_page2_1.o(i.Advance_Delay_B) referenced from mic_page2.o(i.Switch_Down_Echo_4)
 <LI><a href="#[44]">Advance_Delay_B</a> from mic_page2_1.o(i.Advance_Delay_B) referenced from mic_page2.o(i.Switch_Up_Echo_1)
 <LI><a href="#[44]">Advance_Delay_B</a> from mic_page2_1.o(i.Advance_Delay_B) referenced from mic_page2.o(i.Switch_Up_Echo_2)
 <LI><a href="#[44]">Advance_Delay_B</a> from mic_page2_1.o(i.Advance_Delay_B) referenced from mic_page2.o(i.Switch_Up_Echo_3)
 <LI><a href="#[44]">Advance_Delay_B</a> from mic_page2_1.o(i.Advance_Delay_B) referenced from mic_page2.o(i.Switch_Up_Echo_4)
 <LI><a href="#[2e]">Attack_Show</a> from mic_page2_1.o(i.Attack_Show) referenced from mic_page2.o(i.DR_Page2_Switch_DOWN)
 <LI><a href="#[2e]">Attack_Show</a> from mic_page2_1.o(i.Attack_Show) referenced from mic_page2.o(i.DR_Page2_Switch_UP)
 <LI><a href="#[18]">DMA1_Channel1_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[19]">DMA1_Channel2_3_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel4_5_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[37]">DR_compress</a> from reverb.o(i.DR_compress) referenced from mic_page2.o(i.Mic_Main_Switch_Down)
 <LI><a href="#[37]">DR_compress</a> from reverb.o(i.DR_compress) referenced from mic_page2.o(i.Mic_Main_Switch_UP)
 <LI><a href="#[3a]">Dry_voice</a> from mic_page2_1.o(i.Dry_voice) referenced from mic_page2.o(i.Reverb_Page2_Switch_DOWN)
 <LI><a href="#[3a]">Dry_voice</a> from mic_page2_1.o(i.Dry_voice) referenced from mic_page2.o(i.Reverb_Page2_Switch_UP)
 <LI><a href="#[15]">EXTI0_1_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[16]">EXTI2_3_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[17]">EXTI4_15_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[3c]">Echo_Gain</a> from mic_page2_1.o(i.Echo_Gain) referenced from mic_page2.o(i.Reverb_Page2_Switch_DOWN)
 <LI><a href="#[3c]">Echo_Gain</a> from mic_page2_1.o(i.Echo_Gain) referenced from mic_page2.o(i.Reverb_Page2_Switch_UP)
 <LI><a href="#[34]">Echo_Show</a> from reverb.o(i.Echo_Show) referenced from mic_page2.o(i.Mic_Main_Switch_Down)
 <LI><a href="#[34]">Echo_Show</a> from reverb.o(i.Echo_Show) referenced from mic_page2.o(i.Mic_Main_Switch_UP)
 <LI><a href="#[3b]">Echo_time_delay</a> from mic_page2_1.o(i.Echo_time_delay) referenced from mic_page2.o(i.Reverb_Page2_Switch_DOWN)
 <LI><a href="#[3b]">Echo_time_delay</a> from mic_page2_1.o(i.Echo_time_delay) referenced from mic_page2.o(i.Reverb_Page2_Switch_UP)
 <LI><a href="#[32]">Equili_Show</a> from reverb.o(i.Equili_Show) referenced from mic_page2.o(i.Mic_Main_Switch_Down)
 <LI><a href="#[32]">Equili_Show</a> from reverb.o(i.Equili_Show) referenced from mic_page2.o(i.Mic_Main_Switch_UP)
 <LI><a href="#[13]">FLASH_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[41]">Feedback_Value_A</a> from mic_page2_1.o(i.Feedback_Value_A) referenced from mic_page2.o(i.Switch_Down_Echo_1)
 <LI><a href="#[41]">Feedback_Value_A</a> from mic_page2_1.o(i.Feedback_Value_A) referenced from mic_page2.o(i.Switch_Down_Echo_2)
 <LI><a href="#[41]">Feedback_Value_A</a> from mic_page2_1.o(i.Feedback_Value_A) referenced from mic_page2.o(i.Switch_Down_Echo_3)
 <LI><a href="#[41]">Feedback_Value_A</a> from mic_page2_1.o(i.Feedback_Value_A) referenced from mic_page2.o(i.Switch_Up_Echo_1)
 <LI><a href="#[41]">Feedback_Value_A</a> from mic_page2_1.o(i.Feedback_Value_A) referenced from mic_page2.o(i.Switch_Up_Echo_2)
 <LI><a href="#[41]">Feedback_Value_A</a> from mic_page2_1.o(i.Feedback_Value_A) referenced from mic_page2.o(i.Switch_Up_Echo_3)
 <LI><a href="#[46]">Feedback_Value_B</a> from mic_page2_1.o(i.Feedback_Value_B) referenced from mic_page2.o(i.Switch_Down_Echo_2)
 <LI><a href="#[46]">Feedback_Value_B</a> from mic_page2_1.o(i.Feedback_Value_B) referenced from mic_page2.o(i.Switch_Down_Echo_3)
 <LI><a href="#[46]">Feedback_Value_B</a> from mic_page2_1.o(i.Feedback_Value_B) referenced from mic_page2.o(i.Switch_Down_Echo_4)
 <LI><a href="#[46]">Feedback_Value_B</a> from mic_page2_1.o(i.Feedback_Value_B) referenced from mic_page2.o(i.Switch_Up_Echo_2)
 <LI><a href="#[46]">Feedback_Value_B</a> from mic_page2_1.o(i.Feedback_Value_B) referenced from mic_page2.o(i.Switch_Up_Echo_3)
 <LI><a href="#[46]">Feedback_Value_B</a> from mic_page2_1.o(i.Feedback_Value_B) referenced from mic_page2.o(i.Switch_Up_Echo_4)
 <LI><a href="#[43]">Filter_A</a> from mic_page2_1.o(i.Filter_A) referenced from mic_page2.o(i.Switch_Down_Echo_1)
 <LI><a href="#[43]">Filter_A</a> from mic_page2_1.o(i.Filter_A) referenced from mic_page2.o(i.Switch_Down_Echo_2)
 <LI><a href="#[43]">Filter_A</a> from mic_page2_1.o(i.Filter_A) referenced from mic_page2.o(i.Switch_Down_Echo_3)
 <LI><a href="#[43]">Filter_A</a> from mic_page2_1.o(i.Filter_A) referenced from mic_page2.o(i.Switch_Down_Echo_4)
 <LI><a href="#[43]">Filter_A</a> from mic_page2_1.o(i.Filter_A) referenced from mic_page2.o(i.Switch_Up_Echo_1)
 <LI><a href="#[43]">Filter_A</a> from mic_page2_1.o(i.Filter_A) referenced from mic_page2.o(i.Switch_Up_Echo_2)
 <LI><a href="#[43]">Filter_A</a> from mic_page2_1.o(i.Filter_A) referenced from mic_page2.o(i.Switch_Up_Echo_3)
 <LI><a href="#[43]">Filter_A</a> from mic_page2_1.o(i.Filter_A) referenced from mic_page2.o(i.Switch_Up_Echo_4)
 <LI><a href="#[48]">Filter_B</a> from mic_page2_1.o(i.Filter_B) referenced from mic_page2.o(i.Switch_Down_Echo_4)
 <LI><a href="#[48]">Filter_B</a> from mic_page2_1.o(i.Filter_B) referenced from mic_page2.o(i.Switch_Up_Echo_4)
 <LI><a href="#[35]">Frequenc_shift_Show</a> from reverb.o(i.Frequenc_shift_Show) referenced from mic_page2.o(i.Mic_Main_Switch_Down)
 <LI><a href="#[35]">Frequenc_shift_Show</a> from reverb.o(i.Frequenc_shift_Show) referenced from mic_page2.o(i.Mic_Main_Switch_UP)
 <LI><a href="#[30]">Frequency_shift_switch</a> from mic_page2_1.o(i.Frequency_shift_switch) referenced from mic_page2.o(i.FS_Page2_Switch_DOWN)
 <LI><a href="#[30]">Frequency_shift_switch</a> from mic_page2_1.o(i.Frequency_shift_switch) referenced from mic_page2.o(i.FS_Page2_Switch_UP)
 <LI><a href="#[31]">Frequency_shift_value</a> from mic_page2_1.o(i.Frequency_shift_value) referenced from mic_page2.o(i.FS_Page2_Switch_DOWN)
 <LI><a href="#[31]">Frequency_shift_value</a> from mic_page2_1.o(i.Frequency_shift_value) referenced from mic_page2.o(i.FS_Page2_Switch_UP)
 <LI><a href="#[d]">HardFault_Handler</a> from stm32f0xx_it.o(i.HardFault_Handler) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[3e]">HightorLow_Cut</a> from mic_page2_1.o(i.HightorLow_Cut) referenced from mic_page2.o(i.Reverb_Page2_Switch_DOWN)
 <LI><a href="#[3e]">HightorLow_Cut</a> from mic_page2_1.o(i.HightorLow_Cut) referenced from mic_page2.o(i.Reverb_Page2_Switch_UP)
 <LI><a href="#[23]">I2C1_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[24]">I2C2_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[38]">Input_qualcomm</a> from reverb.o(i.Input_qualcomm) referenced from mic_page2.o(i.Mic_Main_Switch_Down)
 <LI><a href="#[38]">Input_qualcomm</a> from reverb.o(i.Input_qualcomm) referenced from mic_page2.o(i.Mic_Main_Switch_UP)
 <LI><a href="#[3f]">Main_Delay_A</a> from mic_page2_1.o(i.Main_Delay_A) referenced from mic_page2.o(i.Switch_Down_Echo_1)
 <LI><a href="#[3f]">Main_Delay_A</a> from mic_page2_1.o(i.Main_Delay_A) referenced from mic_page2.o(i.Switch_Down_Echo_2)
 <LI><a href="#[3f]">Main_Delay_A</a> from mic_page2_1.o(i.Main_Delay_A) referenced from mic_page2.o(i.Switch_Up_Echo_1)
 <LI><a href="#[3f]">Main_Delay_A</a> from mic_page2_1.o(i.Main_Delay_A) referenced from mic_page2.o(i.Switch_Up_Echo_2)
 <LI><a href="#[45]">Main_Delay_B</a> from mic_page2_1.o(i.Main_Delay_B) referenced from mic_page2.o(i.Switch_Down_Echo_1)
 <LI><a href="#[45]">Main_Delay_B</a> from mic_page2_1.o(i.Main_Delay_B) referenced from mic_page2.o(i.Switch_Down_Echo_2)
 <LI><a href="#[45]">Main_Delay_B</a> from mic_page2_1.o(i.Main_Delay_B) referenced from mic_page2.o(i.Switch_Down_Echo_3)
 <LI><a href="#[45]">Main_Delay_B</a> from mic_page2_1.o(i.Main_Delay_B) referenced from mic_page2.o(i.Switch_Down_Echo_4)
 <LI><a href="#[45]">Main_Delay_B</a> from mic_page2_1.o(i.Main_Delay_B) referenced from mic_page2.o(i.Switch_Up_Echo_1)
 <LI><a href="#[45]">Main_Delay_B</a> from mic_page2_1.o(i.Main_Delay_B) referenced from mic_page2.o(i.Switch_Up_Echo_2)
 <LI><a href="#[45]">Main_Delay_B</a> from mic_page2_1.o(i.Main_Delay_B) referenced from mic_page2.o(i.Switch_Up_Echo_3)
 <LI><a href="#[45]">Main_Delay_B</a> from mic_page2_1.o(i.Main_Delay_B) referenced from mic_page2.o(i.Switch_Up_Echo_4)
 <LI><a href="#[7]">Mic_Main_Enter</a> from mic_page2.o(i.Mic_Main_Enter) referenced 2 times from state.o(.data)
 <LI><a href="#[a]">Mic_Main_Esc</a> from mic_page2.o(i.Mic_Main_Esc) referenced 2 times from state.o(.data)
 <LI><a href="#[6]">Mic_Main_Switch_Down</a> from mic_page2.o(i.Mic_Main_Switch_Down) referenced 2 times from state.o(.data)
 <LI><a href="#[5]">Mic_Main_Switch_UP</a> from mic_page2.o(i.Mic_Main_Switch_UP) referenced 2 times from state.o(.data)
 <LI><a href="#[c]">NMI_Handler</a> from stm32f0xx_it.o(i.NMI_Handler) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[36]">Noise_shold</a> from reverb.o(i.Noise_shold) referenced from mic_page2.o(i.Mic_Main_Switch_Down)
 <LI><a href="#[36]">Noise_shold</a> from reverb.o(i.Noise_shold) referenced from mic_page2.o(i.Mic_Main_Switch_UP)
 <LI><a href="#[f]">PendSV_Handler</a> from stm32f0xx_it.o(i.PendSV_Handler) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[2c]">PreGain_Show</a> from mic_page2_1.o(i.PreGain_Show) referenced from mic_page2.o(i.DR_Page2_Switch_DOWN)
 <LI><a href="#[2c]">PreGain_Show</a> from mic_page2_1.o(i.PreGain_Show) referenced from mic_page2.o(i.DR_Page2_Switch_UP)
 <LI><a href="#[14]">RCC_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[12]">RTC_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[2d]">Ratio_Show</a> from mic_page2_1.o(i.Ratio_Show) referenced from mic_page2.o(i.DR_Page2_Switch_DOWN)
 <LI><a href="#[2d]">Ratio_Show</a> from mic_page2_1.o(i.Ratio_Show) referenced from mic_page2.o(i.DR_Page2_Switch_UP)
 <LI><a href="#[2f]">Release_Show</a> from mic_page2_1.o(i.Release_Show) referenced from mic_page2.o(i.DR_Page2_Switch_DOWN)
 <LI><a href="#[2f]">Release_Show</a> from mic_page2_1.o(i.Release_Show) referenced from mic_page2.o(i.DR_Page2_Switch_UP)
 <LI><a href="#[b]">Reset_Handler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[33]">Reverb_Show</a> from reverb.o(i.Reverb_Show) referenced from mic_page2.o(i.Mic_Main_Switch_Down)
 <LI><a href="#[33]">Reverb_Show</a> from reverb.o(i.Reverb_Show) referenced from mic_page2.o(i.Mic_Main_Switch_UP)
 <LI><a href="#[3d]">Reverb_Time</a> from mic_page2_1.o(i.Reverb_Time) referenced from mic_page2.o(i.Reverb_Page2_Switch_DOWN)
 <LI><a href="#[3d]">Reverb_Time</a> from mic_page2_1.o(i.Reverb_Time) referenced from mic_page2.o(i.Reverb_Page2_Switch_UP)
 <LI><a href="#[25]">SPI1_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[26]">SPI2_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[e]">SVC_Handler</a> from stm32f0xx_it.o(i.SVC_Handler) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[4a]">Seg1_Show</a> from mic_page2_1.o(i.Seg1_Show) referenced from mic_page2.o(i.Switch_Down_Equili_1)
 <LI><a href="#[4a]">Seg1_Show</a> from mic_page2_1.o(i.Seg1_Show) referenced from mic_page2.o(i.Switch_UP_Equili_1)
 <LI><a href="#[49]">Seg2_Show</a> from mic_page2_1.o(i.Seg2_Show) referenced from mic_page2.o(i.Switch_Down_Equili_1)
 <LI><a href="#[49]">Seg2_Show</a> from mic_page2_1.o(i.Seg2_Show) referenced from mic_page2.o(i.Switch_Down_Equili_2)
 <LI><a href="#[49]">Seg2_Show</a> from mic_page2_1.o(i.Seg2_Show) referenced from mic_page2.o(i.Switch_UP_Equili_1)
 <LI><a href="#[49]">Seg2_Show</a> from mic_page2_1.o(i.Seg2_Show) referenced from mic_page2.o(i.Switch_UP_Equili_2)
 <LI><a href="#[4b]">Seg3_Show</a> from mic_page2_1.o(i.Seg3_Show) referenced from mic_page2.o(i.Switch_Down_Equili_1)
 <LI><a href="#[4b]">Seg3_Show</a> from mic_page2_1.o(i.Seg3_Show) referenced from mic_page2.o(i.Switch_Down_Equili_2)
 <LI><a href="#[4b]">Seg3_Show</a> from mic_page2_1.o(i.Seg3_Show) referenced from mic_page2.o(i.Switch_Down_Equili_3)
 <LI><a href="#[4b]">Seg3_Show</a> from mic_page2_1.o(i.Seg3_Show) referenced from mic_page2.o(i.Switch_UP_Equili_1)
 <LI><a href="#[4b]">Seg3_Show</a> from mic_page2_1.o(i.Seg3_Show) referenced from mic_page2.o(i.Switch_UP_Equili_2)
 <LI><a href="#[4b]">Seg3_Show</a> from mic_page2_1.o(i.Seg3_Show) referenced from mic_page2.o(i.Switch_UP_Equili_3)
 <LI><a href="#[4c]">Seg4_Show</a> from mic_page2_1.o(i.Seg4_Show) referenced from mic_page2.o(i.Switch_Down_Equili_1)
 <LI><a href="#[4c]">Seg4_Show</a> from mic_page2_1.o(i.Seg4_Show) referenced from mic_page2.o(i.Switch_Down_Equili_2)
 <LI><a href="#[4c]">Seg4_Show</a> from mic_page2_1.o(i.Seg4_Show) referenced from mic_page2.o(i.Switch_Down_Equili_3)
 <LI><a href="#[4c]">Seg4_Show</a> from mic_page2_1.o(i.Seg4_Show) referenced from mic_page2.o(i.Switch_UP_Equili_1)
 <LI><a href="#[4c]">Seg4_Show</a> from mic_page2_1.o(i.Seg4_Show) referenced from mic_page2.o(i.Switch_UP_Equili_2)
 <LI><a href="#[4c]">Seg4_Show</a> from mic_page2_1.o(i.Seg4_Show) referenced from mic_page2.o(i.Switch_UP_Equili_3)
 <LI><a href="#[4d]">Seg5_Show</a> from mic_page2_1.o(i.Seg5_Show) referenced from mic_page2.o(i.Switch_Down_Equili_1)
 <LI><a href="#[4d]">Seg5_Show</a> from mic_page2_1.o(i.Seg5_Show) referenced from mic_page2.o(i.Switch_Down_Equili_2)
 <LI><a href="#[4d]">Seg5_Show</a> from mic_page2_1.o(i.Seg5_Show) referenced from mic_page2.o(i.Switch_Down_Equili_3)
 <LI><a href="#[4d]">Seg5_Show</a> from mic_page2_1.o(i.Seg5_Show) referenced from mic_page2.o(i.Switch_UP_Equili_1)
 <LI><a href="#[4d]">Seg5_Show</a> from mic_page2_1.o(i.Seg5_Show) referenced from mic_page2.o(i.Switch_UP_Equili_2)
 <LI><a href="#[4d]">Seg5_Show</a> from mic_page2_1.o(i.Seg5_Show) referenced from mic_page2.o(i.Switch_UP_Equili_3)
 <LI><a href="#[4e]">Seg6_Show</a> from mic_page2_1.o(i.Seg6_Show) referenced from mic_page2.o(i.Switch_Down_Equili_1)
 <LI><a href="#[4e]">Seg6_Show</a> from mic_page2_1.o(i.Seg6_Show) referenced from mic_page2.o(i.Switch_Down_Equili_2)
 <LI><a href="#[4e]">Seg6_Show</a> from mic_page2_1.o(i.Seg6_Show) referenced from mic_page2.o(i.Switch_Down_Equili_3)
 <LI><a href="#[4e]">Seg6_Show</a> from mic_page2_1.o(i.Seg6_Show) referenced from mic_page2.o(i.Switch_UP_Equili_1)
 <LI><a href="#[4e]">Seg6_Show</a> from mic_page2_1.o(i.Seg6_Show) referenced from mic_page2.o(i.Switch_UP_Equili_2)
 <LI><a href="#[4e]">Seg6_Show</a> from mic_page2_1.o(i.Seg6_Show) referenced from mic_page2.o(i.Switch_UP_Equili_3)
 <LI><a href="#[4f]">Seg7_Show</a> from mic_page2_1.o(i.Seg7_Show) referenced from mic_page2.o(i.Switch_Down_Equili_1)
 <LI><a href="#[4f]">Seg7_Show</a> from mic_page2_1.o(i.Seg7_Show) referenced from mic_page2.o(i.Switch_Down_Equili_2)
 <LI><a href="#[4f]">Seg7_Show</a> from mic_page2_1.o(i.Seg7_Show) referenced from mic_page2.o(i.Switch_Down_Equili_3)
 <LI><a href="#[4f]">Seg7_Show</a> from mic_page2_1.o(i.Seg7_Show) referenced from mic_page2.o(i.Switch_UP_Equili_1)
 <LI><a href="#[4f]">Seg7_Show</a> from mic_page2_1.o(i.Seg7_Show) referenced from mic_page2.o(i.Switch_UP_Equili_2)
 <LI><a href="#[4f]">Seg7_Show</a> from mic_page2_1.o(i.Seg7_Show) referenced from mic_page2.o(i.Switch_UP_Equili_3)
 <LI><a href="#[50]">Seg8_Show</a> from mic_page2_1.o(i.Seg8_Show) referenced from mic_page2.o(i.Switch_Down_Equili_2)
 <LI><a href="#[50]">Seg8_Show</a> from mic_page2_1.o(i.Seg8_Show) referenced from mic_page2.o(i.Switch_Down_Equili_3)
 <LI><a href="#[50]">Seg8_Show</a> from mic_page2_1.o(i.Seg8_Show) referenced from mic_page2.o(i.Switch_UP_Equili_2)
 <LI><a href="#[50]">Seg8_Show</a> from mic_page2_1.o(i.Seg8_Show) referenced from mic_page2.o(i.Switch_UP_Equili_3)
 <LI><a href="#[51]">Seg9_Show</a> from mic_page2_1.o(i.Seg9_Show) referenced from mic_page2.o(i.Switch_Down_Equili_3)
 <LI><a href="#[51]">Seg9_Show</a> from mic_page2_1.o(i.Seg9_Show) referenced from mic_page2.o(i.Switch_UP_Equili_3)
 <LI><a href="#[2b]">Shold_Show</a> from mic_page2_1.o(i.Shold_Show) referenced from mic_page2.o(i.DR_Page2_Switch_DOWN)
 <LI><a href="#[2b]">Shold_Show</a> from mic_page2_1.o(i.Shold_Show) referenced from mic_page2.o(i.DR_Page2_Switch_UP)
 <LI><a href="#[9]">Switch_state_down</a> from state.o(i.Switch_state_down) referenced 2 times from state.o(.data)
 <LI><a href="#[8]">Switch_state_up</a> from state.o(i.Switch_state_up) referenced 2 times from state.o(.data)
 <LI><a href="#[10]">SysTick_Handler</a> from stm32f0xx_it.o(i.SysTick_Handler) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[29]">SystemInit</a> from system_stm32f0xx.o(i.SystemInit) referenced from startup_stm32f030.o(.text)
 <LI><a href="#[1f]">TIM14_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[20]">TIM15_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[21]">TIM16_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[22]">TIM17_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[1c]">TIM1_BRK_UP_TRG_COM_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[1d]">TIM1_CC_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[1e]">TIM3_IRQHandler</a> from timer.o(i.TIM3_IRQHandler) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[27]">USART1_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[28]">USART2_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[42]">Volume_Out_A</a> from mic_page2_1.o(i.Volume_Out_A) referenced from mic_page2.o(i.Switch_Down_Echo_1)
 <LI><a href="#[42]">Volume_Out_A</a> from mic_page2_1.o(i.Volume_Out_A) referenced from mic_page2.o(i.Switch_Down_Echo_2)
 <LI><a href="#[42]">Volume_Out_A</a> from mic_page2_1.o(i.Volume_Out_A) referenced from mic_page2.o(i.Switch_Down_Echo_3)
 <LI><a href="#[42]">Volume_Out_A</a> from mic_page2_1.o(i.Volume_Out_A) referenced from mic_page2.o(i.Switch_Down_Echo_4)
 <LI><a href="#[42]">Volume_Out_A</a> from mic_page2_1.o(i.Volume_Out_A) referenced from mic_page2.o(i.Switch_Up_Echo_1)
 <LI><a href="#[42]">Volume_Out_A</a> from mic_page2_1.o(i.Volume_Out_A) referenced from mic_page2.o(i.Switch_Up_Echo_2)
 <LI><a href="#[42]">Volume_Out_A</a> from mic_page2_1.o(i.Volume_Out_A) referenced from mic_page2.o(i.Switch_Up_Echo_3)
 <LI><a href="#[42]">Volume_Out_A</a> from mic_page2_1.o(i.Volume_Out_A) referenced from mic_page2.o(i.Switch_Up_Echo_4)
 <LI><a href="#[47]">Volume_Out_B</a> from mic_page2_1.o(i.Volume_Out_B) referenced from mic_page2.o(i.Switch_Down_Echo_3)
 <LI><a href="#[47]">Volume_Out_B</a> from mic_page2_1.o(i.Volume_Out_B) referenced from mic_page2.o(i.Switch_Down_Echo_4)
 <LI><a href="#[47]">Volume_Out_B</a> from mic_page2_1.o(i.Volume_Out_B) referenced from mic_page2.o(i.Switch_Up_Echo_3)
 <LI><a href="#[47]">Volume_Out_B</a> from mic_page2_1.o(i.Volume_Out_B) referenced from mic_page2.o(i.Switch_Up_Echo_4)
 <LI><a href="#[11]">WWDG_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[39]">Wet_voice</a> from mic_page2_1.o(i.Wet_voice) referenced from mic_page2.o(i.Reverb_Page2_Switch_DOWN)
 <LI><a href="#[39]">Wet_voice</a> from mic_page2_1.o(i.Wet_voice) referenced from mic_page2.o(i.Reverb_Page2_Switch_UP)
 <LI><a href="#[52]">__main</a> from __main.o(!!!main) referenced from startup_stm32f030.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[52]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[53]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[55]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[ae]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[af]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[b0]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[59]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[b1]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[b2]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[b3]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[b4]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[b5]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[b6]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[b7]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[b8]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[b9]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[ba]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[bb]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[bc]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[bd]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[be]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[bf]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[c0]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[c1]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[c2]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[c3]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[c4]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[c5]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[5e]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[c6]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[c7]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[c8]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[c9]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[ca]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[cb]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[54]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[cc]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[56]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[58]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[cd]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[5a]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; Mic_Main_interface &rArr; gui_draw_arcrectangle &rArr; gui_draw_arc &rArr; gui_draw_circle8 &rArr; gui_draw_expoint &rArr; LCD_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[ce]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[64]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[5d]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[cf]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[5f]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[b]"></a>Reset_Handler</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>ADC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>TIM15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>TIM1_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_stm32f030.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[d0]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[d1]"></a>__aeabi_uidivmod</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[d2]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[a5]"></a>__aeabi_idivmod</STRONG> (Thumb, 326 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>

<P><STRONG><a name="[d3]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[d4]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[d5]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[57]"></a>__user_setup_stackheap</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[5c]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[d6]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[61]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[d7]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[60]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[d8]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[d9]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[da]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[db]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[dc]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[40]"></a>Advance_Delay_A</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, mic_page2_1.o(i.Advance_Delay_A))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Advance_Delay_A &rArr; LCD_ShowChar_CN &rArr; LCD_Fast_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChar_CN
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChar
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIC_Echo_page2
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Up_Echo_1
</UL>
<BR>[Address Reference Count : 2]<UL><LI> mic_page2.o(i.Switch_Down_Echo_1)
<LI> mic_page2.o(i.Switch_Up_Echo_1)
</UL>
<P><STRONG><a name="[44]"></a>Advance_Delay_B</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, mic_page2_1.o(i.Advance_Delay_B))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Advance_Delay_B &rArr; LCD_ShowChar_CN &rArr; LCD_Fast_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChar_CN
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChar
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIC_Echo_page2
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Up_Echo_3
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Up_Echo_2
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Up_Echo_1
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Echo_4
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Echo_3
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Echo_2
</UL>
<BR>[Address Reference Count : 8]<UL><LI> mic_page2.o(i.Switch_Down_Echo_1)
<LI> mic_page2.o(i.Switch_Down_Echo_2)
<LI> mic_page2.o(i.Switch_Down_Echo_3)
<LI> mic_page2.o(i.Switch_Down_Echo_4)
<LI> mic_page2.o(i.Switch_Up_Echo_1)
<LI> mic_page2.o(i.Switch_Up_Echo_2)
<LI> mic_page2.o(i.Switch_Up_Echo_3)
<LI> mic_page2.o(i.Switch_Up_Echo_4)
</UL>
<P><STRONG><a name="[2e]"></a>Attack_Show</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, mic_page2_1.o(i.Attack_Show))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = Attack_Show &rArr; LCD_ShowString &rArr; LCD_ShowChar &rArr; LCD_Fast_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIC_DR_page2
</UL>
<BR>[Address Reference Count : 2]<UL><LI> mic_page2.o(i.DR_Page2_Switch_DOWN)
<LI> mic_page2.o(i.DR_Page2_Switch_UP)
</UL>
<P><STRONG><a name="[6b]"></a>DR_Page2_Switch_DOWN</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, mic_page2.o(i.DR_Page2_Switch_DOWN))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = DR_Page2_Switch_DOWN &rArr; Color_especial &rArr; Color_Conver &rArr; gui_draw_arcrectangle &rArr; gui_draw_arc &rArr; gui_draw_circle8 &rArr; gui_draw_expoint &rArr; LCD_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Color_especial
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_state_down
</UL>

<P><STRONG><a name="[6d]"></a>DR_Page2_Switch_UP</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, mic_page2.o(i.DR_Page2_Switch_UP))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = DR_Page2_Switch_UP &rArr; Color_especial &rArr; Color_Conver &rArr; gui_draw_arcrectangle &rArr; gui_draw_arc &rArr; gui_draw_circle8 &rArr; gui_draw_expoint &rArr; LCD_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Color_especial
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_state_up
</UL>

<P><STRONG><a name="[37]"></a>DR_compress</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, reverb.o(i.DR_compress))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = DR_compress &rArr; LCD_ShowChar_CN &rArr; LCD_Fast_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChar_CN
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mic_Main_interface
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mic_Main_Esc
</UL>
<BR>[Address Reference Count : 2]<UL><LI> mic_page2.o(i.Mic_Main_Switch_Down)
<LI> mic_page2.o(i.Mic_Main_Switch_UP)
</UL>
<P><STRONG><a name="[3a]"></a>Dry_voice</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, mic_page2_1.o(i.Dry_voice))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Dry_voice &rArr; LCD_ShowChar_CN &rArr; LCD_Fast_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChar_CN
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIC_Reverb_page2
</UL>
<BR>[Address Reference Count : 2]<UL><LI> mic_page2.o(i.Reverb_Page2_Switch_DOWN)
<LI> mic_page2.o(i.Reverb_Page2_Switch_UP)
</UL>
<P><STRONG><a name="[3c]"></a>Echo_Gain</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, mic_page2_1.o(i.Echo_Gain))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Echo_Gain &rArr; LCD_ShowChar_CN &rArr; LCD_Fast_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChar_CN
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIC_Reverb_page2
</UL>
<BR>[Address Reference Count : 2]<UL><LI> mic_page2.o(i.Reverb_Page2_Switch_DOWN)
<LI> mic_page2.o(i.Reverb_Page2_Switch_UP)
</UL>
<P><STRONG><a name="[6e]"></a>Echo_Page2_Switch_DOWN</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, mic_page2.o(i.Echo_Page2_Switch_DOWN))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = Echo_Page2_Switch_DOWN &rArr; Switch_Down_Echo_4 &rArr; Color_especial &rArr; Color_Conver &rArr; gui_draw_arcrectangle &rArr; gui_draw_arc &rArr; gui_draw_circle8 &rArr; gui_draw_expoint &rArr; LCD_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Echo_4
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Echo_3
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Echo_2
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Echo_1
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_state_down
</UL>

<P><STRONG><a name="[73]"></a>Echo_Page2_Switch_UP</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, mic_page2.o(i.Echo_Page2_Switch_UP))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = Echo_Page2_Switch_UP &rArr; Switch_Up_Echo_3 &rArr; Color_especial &rArr; Color_Conver &rArr; gui_draw_arcrectangle &rArr; gui_draw_arc &rArr; gui_draw_circle8 &rArr; gui_draw_expoint &rArr; LCD_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Up_Echo_4
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Up_Echo_3
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Up_Echo_2
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Up_Echo_1
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_state_up
</UL>

<P><STRONG><a name="[34]"></a>Echo_Show</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, reverb.o(i.Echo_Show))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Echo_Show &rArr; LCD_ShowChar_CN &rArr; LCD_Fast_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChar_CN
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mic_Main_interface
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mic_Main_Esc
</UL>
<BR>[Address Reference Count : 2]<UL><LI> mic_page2.o(i.Mic_Main_Switch_Down)
<LI> mic_page2.o(i.Mic_Main_Switch_UP)
</UL>
<P><STRONG><a name="[3b]"></a>Echo_time_delay</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, mic_page2_1.o(i.Echo_time_delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Echo_time_delay &rArr; LCD_ShowChar_CN &rArr; LCD_Fast_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChar_CN
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIC_Reverb_page2
</UL>
<BR>[Address Reference Count : 2]<UL><LI> mic_page2.o(i.Reverb_Page2_Switch_DOWN)
<LI> mic_page2.o(i.Reverb_Page2_Switch_UP)
</UL>
<P><STRONG><a name="[78]"></a>Equili_Page2_Switch_DOWN</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, mic_page2.o(i.Equili_Page2_Switch_DOWN))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = Equili_Page2_Switch_DOWN &rArr; Switch_Down_Equili_3 &rArr; Color_especial &rArr; Color_Conver &rArr; gui_draw_arcrectangle &rArr; gui_draw_arc &rArr; gui_draw_circle8 &rArr; gui_draw_expoint &rArr; LCD_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Equili_3
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Equili_2
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Equili_1
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_state_down
</UL>

<P><STRONG><a name="[7c]"></a>Equili_Page2_Switch_UP</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, mic_page2.o(i.Equili_Page2_Switch_UP))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = Equili_Page2_Switch_UP &rArr; Switch_UP_Equili_2 &rArr; Color_especial &rArr; Color_Conver &rArr; gui_draw_arcrectangle &rArr; gui_draw_arc &rArr; gui_draw_circle8 &rArr; gui_draw_expoint &rArr; LCD_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_UP_Equili_3
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_UP_Equili_2
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_UP_Equili_1
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_state_up
</UL>

<P><STRONG><a name="[32]"></a>Equili_Show</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, reverb.o(i.Equili_Show))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Equili_Show &rArr; LCD_ShowChar_CN &rArr; LCD_Fast_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChar_CN
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mic_Main_interface
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mic_Main_Esc
</UL>
<BR>[Address Reference Count : 2]<UL><LI> mic_page2.o(i.Mic_Main_Switch_Down)
<LI> mic_page2.o(i.Mic_Main_Switch_UP)
</UL>
<P><STRONG><a name="[80]"></a>FSM_EventHandle</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, state.o(i.FSM_EventHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FSM_EventHandle
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSM_StateTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[81]"></a>FSM_StateTransfer</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, state.o(i.FSM_StateTransfer))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSM_EventHandle
</UL>

<P><STRONG><a name="[82]"></a>FS_Page2_Switch_DOWN</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, mic_page2.o(i.FS_Page2_Switch_DOWN))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = FS_Page2_Switch_DOWN &rArr; Color_especial &rArr; Color_Conver &rArr; gui_draw_arcrectangle &rArr; gui_draw_arc &rArr; gui_draw_circle8 &rArr; gui_draw_expoint &rArr; LCD_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Color_especial
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_state_down
</UL>

<P><STRONG><a name="[83]"></a>FS_Page2_Switch_UP</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, mic_page2.o(i.FS_Page2_Switch_UP))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = FS_Page2_Switch_UP &rArr; Color_especial &rArr; Color_Conver &rArr; gui_draw_arcrectangle &rArr; gui_draw_arc &rArr; gui_draw_circle8 &rArr; gui_draw_expoint &rArr; LCD_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Color_especial
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_state_up
</UL>

<P><STRONG><a name="[41]"></a>Feedback_Value_A</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, mic_page2_1.o(i.Feedback_Value_A))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Feedback_Value_A &rArr; LCD_ShowChar_CN &rArr; LCD_Fast_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChar_CN
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChar
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIC_Echo_page2
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Up_Echo_3
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Up_Echo_2
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Up_Echo_1
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Echo_3
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Echo_2
</UL>
<BR>[Address Reference Count : 6]<UL><LI> mic_page2.o(i.Switch_Down_Echo_1)
<LI> mic_page2.o(i.Switch_Down_Echo_2)
<LI> mic_page2.o(i.Switch_Down_Echo_3)
<LI> mic_page2.o(i.Switch_Up_Echo_1)
<LI> mic_page2.o(i.Switch_Up_Echo_2)
<LI> mic_page2.o(i.Switch_Up_Echo_3)
</UL>
<P><STRONG><a name="[46]"></a>Feedback_Value_B</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, mic_page2_1.o(i.Feedback_Value_B))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Feedback_Value_B &rArr; LCD_ShowChar_CN &rArr; LCD_Fast_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChar_CN
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChar
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Up_Echo_3
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Up_Echo_2
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Echo_4
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Echo_3
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Echo_2
</UL>
<BR>[Address Reference Count : 6]<UL><LI> mic_page2.o(i.Switch_Down_Echo_2)
<LI> mic_page2.o(i.Switch_Down_Echo_3)
<LI> mic_page2.o(i.Switch_Down_Echo_4)
<LI> mic_page2.o(i.Switch_Up_Echo_2)
<LI> mic_page2.o(i.Switch_Up_Echo_3)
<LI> mic_page2.o(i.Switch_Up_Echo_4)
</UL>
<P><STRONG><a name="[43]"></a>Filter_A</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, mic_page2_1.o(i.Filter_A))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Filter_A &rArr; LCD_ShowChar_CN &rArr; LCD_Fast_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChar_CN
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChar
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIC_Echo_page2
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Up_Echo_3
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Up_Echo_2
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Up_Echo_1
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Echo_4
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Echo_3
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Echo_2
</UL>
<BR>[Address Reference Count : 8]<UL><LI> mic_page2.o(i.Switch_Down_Echo_1)
<LI> mic_page2.o(i.Switch_Down_Echo_2)
<LI> mic_page2.o(i.Switch_Down_Echo_3)
<LI> mic_page2.o(i.Switch_Down_Echo_4)
<LI> mic_page2.o(i.Switch_Up_Echo_1)
<LI> mic_page2.o(i.Switch_Up_Echo_2)
<LI> mic_page2.o(i.Switch_Up_Echo_3)
<LI> mic_page2.o(i.Switch_Up_Echo_4)
</UL>
<P><STRONG><a name="[48]"></a>Filter_B</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, mic_page2_1.o(i.Filter_B))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Filter_B &rArr; LCD_ShowChar_CN &rArr; LCD_Fast_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChar_CN
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChar
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Echo_4
</UL>
<BR>[Address Reference Count : 2]<UL><LI> mic_page2.o(i.Switch_Down_Echo_4)
<LI> mic_page2.o(i.Switch_Up_Echo_4)
</UL>
<P><STRONG><a name="[35]"></a>Frequenc_shift_Show</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, reverb.o(i.Frequenc_shift_Show))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Frequenc_shift_Show &rArr; LCD_ShowChar_CN &rArr; LCD_Fast_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChar_CN
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mic_Main_interface
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mic_Main_Esc
</UL>
<BR>[Address Reference Count : 2]<UL><LI> mic_page2.o(i.Mic_Main_Switch_Down)
<LI> mic_page2.o(i.Mic_Main_Switch_UP)
</UL>
<P><STRONG><a name="[30]"></a>Frequency_shift_switch</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, mic_page2_1.o(i.Frequency_shift_switch))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Frequency_shift_switch &rArr; LCD_ShowChar_CN &rArr; LCD_Fast_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChar_CN
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIC_Frequenc_page2
</UL>
<BR>[Address Reference Count : 2]<UL><LI> mic_page2.o(i.FS_Page2_Switch_DOWN)
<LI> mic_page2.o(i.FS_Page2_Switch_UP)
</UL>
<P><STRONG><a name="[31]"></a>Frequency_shift_value</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, mic_page2_1.o(i.Frequency_shift_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Frequency_shift_value &rArr; LCD_ShowChar_CN &rArr; LCD_Fast_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChar_CN
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIC_Frequenc_page2
</UL>
<BR>[Address Reference Count : 2]<UL><LI> mic_page2.o(i.FS_Page2_Switch_DOWN)
<LI> mic_page2.o(i.FS_Page2_Switch_UP)
</UL>
<P><STRONG><a name="[85]"></a>GPIO_Init</STRONG> (Thumb, 144 bytes, Stack size 20 bytes, stm32f0xx_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Init
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GPIO_Init
</UL>

<P><STRONG><a name="[89]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_gpio.o(i.GPIO_ReadInputDataBit))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Scan
</UL>

<P><STRONG><a name="[88]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f0xx_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Scan
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_para
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_data
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_command
</UL>

<P><STRONG><a name="[87]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f0xx_gpio.o(i.GPIO_SetBits))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Scan
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_para
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_data
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_command
</UL>

<P><STRONG><a name="[d]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>HightorLow_Cut</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, mic_page2_1.o(i.HightorLow_Cut))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = HightorLow_Cut &rArr; LCD_ShowChar_CN &rArr; LCD_Fast_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChar_CN
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIC_Reverb_page2
</UL>
<BR>[Address Reference Count : 2]<UL><LI> mic_page2.o(i.Reverb_Page2_Switch_DOWN)
<LI> mic_page2.o(i.Reverb_Page2_Switch_UP)
</UL>
<P><STRONG><a name="[ad]"></a>InitFsm</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, state.o(i.InitFsm))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[38]"></a>Input_qualcomm</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, reverb.o(i.Input_qualcomm))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Input_qualcomm &rArr; LCD_ShowChar_CN &rArr; LCD_Fast_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChar_CN
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mic_Main_interface
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mic_Main_Esc
</UL>
<BR>[Address Reference Count : 2]<UL><LI> mic_page2.o(i.Mic_Main_Switch_Down)
<LI> mic_page2.o(i.Mic_Main_Switch_UP)
</UL>
<P><STRONG><a name="[84]"></a>KEY_Init</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, key.o(i.KEY_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = KEY_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[86]"></a>KEY_Scan</STRONG> (Thumb, 188 bytes, Stack size 8 bytes, key.o(i.KEY_Scan))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = KEY_Scan
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8a]"></a>LCD_DrawPoint</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, display_tft.o(i.LCD_DrawPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LCD_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_qu
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDAT_16
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_draw_expoint
</UL>

<P><STRONG><a name="[8d]"></a>LCD_Fast_DrawPoint</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, display_tft.o(i.LCD_Fast_DrawPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LCD_Fast_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_qu
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDAT_16
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChar_CN
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChar
</UL>

<P><STRONG><a name="[8e]"></a>LCD_Fill</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, display_tft.o(i.LCD_Fill))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = LCD_Fill &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_qu
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDAT_16
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_fill_rectangle
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_draw_vline
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_draw_hline
</UL>

<P><STRONG><a name="[8f]"></a>LCD_GPIO_Init</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, lcd.o(i.LCD_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = LCD_GPIO_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[91]"></a>LCD_Init</STRONG> (Thumb, 508 bytes, Stack size 8 bytes, lcd.o(i.LCD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = LCD_Init &rArr; LCD_GPIO_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_para
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_command
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[66]"></a>LCD_ShowChar</STRONG> (Thumb, 262 bytes, Stack size 56 bytes, display_tft.o(i.LCD_ShowChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = LCD_ShowChar &rArr; LCD_Fast_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fast_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Delay_B
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Delay_A
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Filter_B
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Filter_A
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Feedback_Value_B
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Feedback_Value_A
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Advance_Delay_B
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Advance_Delay_A
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
</UL>

<P><STRONG><a name="[65]"></a>LCD_ShowChar_CN</STRONG> (Thumb, 178 bytes, Stack size 56 bytes, display_tft.o(i.LCD_ShowChar_CN))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = LCD_ShowChar_CN &rArr; LCD_Fast_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fast_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wet_voice
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Volume_Out_B
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Volume_Out_A
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reverb_Time
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reverb_Show
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Noise_shold
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Delay_B
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Delay_A
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_qualcomm
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HightorLow_Cut
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Frequency_shift_value
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Frequency_shift_switch
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Frequenc_shift_Show
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Filter_B
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Filter_A
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Feedback_Value_B
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Feedback_Value_A
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Equili_Show
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Echo_time_delay
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Echo_Show
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Echo_Gain
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dry_voice
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DR_compress
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Advance_Delay_B
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Advance_Delay_A
</UL>

<P><STRONG><a name="[67]"></a>LCD_ShowString</STRONG> (Thumb, 102 bytes, Stack size 48 bytes, display_tft.o(i.LCD_ShowString))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = LCD_ShowString &rArr; LCD_ShowChar &rArr; LCD_Fast_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChar
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Volume_Out_B
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Volume_Out_A
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Shold_Show
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seg9_Show
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seg8_Show
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seg7_Show
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seg6_Show
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seg5_Show
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seg4_Show
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seg3_Show
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seg2_Show
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seg1_Show
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Release_Show
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ratio_Show
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreGain_Show
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Attack_Show
</UL>

<P><STRONG><a name="[92]"></a>LCD_WR_command</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, lcd.o(i.LCD_WR_command))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_WR_command
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_qu
</UL>

<P><STRONG><a name="[95]"></a>LCD_WR_data</STRONG> (Thumb, 226 bytes, Stack size 40 bytes, lcd.o(i.LCD_WR_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LCD_WR_data
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_pic
</UL>

<P><STRONG><a name="[94]"></a>LCD_WR_para</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, lcd.o(i.LCD_WR_para))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_qu
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDAT_16
</UL>

<P><STRONG><a name="[8b]"></a>LCD_qu</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, lcd.o(i.LCD_qu))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_para
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_command
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_pic
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fast_DrawPoint
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPoint
</UL>

<P><STRONG><a name="[96]"></a>MIC_DR_page2</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, mic_page2_1.o(i.MIC_DR_page2))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = MIC_DR_page2 &rArr; gui_draw_arcrectangle &rArr; gui_draw_arc &rArr; gui_draw_circle8 &rArr; gui_draw_expoint &rArr; LCD_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Shold_Show
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Release_Show
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ratio_Show
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreGain_Show
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Attack_Show
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_draw_arcrectangle
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mic_Main_Enter
</UL>

<P><STRONG><a name="[97]"></a>MIC_Echo_page2</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, mic_page2_1.o(i.MIC_Echo_page2))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = MIC_Echo_page2 &rArr; gui_draw_arcrectangle &rArr; gui_draw_arc &rArr; gui_draw_circle8 &rArr; gui_draw_expoint &rArr; LCD_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Volume_Out_A
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Delay_B
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Delay_A
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Filter_A
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Feedback_Value_A
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Advance_Delay_B
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Advance_Delay_A
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Top_Init
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_draw_arcrectangle
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mic_Main_Enter
</UL>

<P><STRONG><a name="[99]"></a>MIC_Equili_page2</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, mic_page2_1.o(i.MIC_Equili_page2))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = MIC_Equili_page2 &rArr; gui_draw_arcrectangle &rArr; gui_draw_arc &rArr; gui_draw_circle8 &rArr; gui_draw_expoint &rArr; LCD_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seg7_Show
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seg6_Show
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seg5_Show
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seg4_Show
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seg3_Show
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seg2_Show
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seg1_Show
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Top_Init
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_draw_arcrectangle
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mic_Main_Enter
</UL>

<P><STRONG><a name="[9a]"></a>MIC_Frequenc_page2</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, mic_page2_1.o(i.MIC_Frequenc_page2))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = MIC_Frequenc_page2 &rArr; gui_draw_arcrectangle &rArr; gui_draw_arc &rArr; gui_draw_circle8 &rArr; gui_draw_expoint &rArr; LCD_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Frequency_shift_value
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Frequency_shift_switch
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_draw_arcrectangle
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mic_Main_Enter
</UL>

<P><STRONG><a name="[9b]"></a>MIC_Reverb_page2</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, mic_page2_1.o(i.MIC_Reverb_page2))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = MIC_Reverb_page2 &rArr; gui_draw_arcrectangle &rArr; gui_draw_arc &rArr; gui_draw_circle8 &rArr; gui_draw_expoint &rArr; LCD_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wet_voice
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reverb_Time
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HightorLow_Cut
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Echo_time_delay
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Echo_Gain
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dry_voice
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_draw_arcrectangle
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mic_Main_Enter
</UL>

<P><STRONG><a name="[3f]"></a>Main_Delay_A</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, mic_page2_1.o(i.Main_Delay_A))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Main_Delay_A &rArr; LCD_ShowChar_CN &rArr; LCD_Fast_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChar_CN
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChar
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIC_Echo_page2
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Up_Echo_2
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Up_Echo_1
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Echo_2
</UL>
<BR>[Address Reference Count : 4]<UL><LI> mic_page2.o(i.Switch_Down_Echo_1)
<LI> mic_page2.o(i.Switch_Down_Echo_2)
<LI> mic_page2.o(i.Switch_Up_Echo_1)
<LI> mic_page2.o(i.Switch_Up_Echo_2)
</UL>
<P><STRONG><a name="[45]"></a>Main_Delay_B</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, mic_page2_1.o(i.Main_Delay_B))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Main_Delay_B &rArr; LCD_ShowChar_CN &rArr; LCD_Fast_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChar_CN
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChar
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIC_Echo_page2
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Up_Echo_3
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Up_Echo_2
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Up_Echo_1
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Echo_4
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Echo_3
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Echo_2
</UL>
<BR>[Address Reference Count : 8]<UL><LI> mic_page2.o(i.Switch_Down_Echo_1)
<LI> mic_page2.o(i.Switch_Down_Echo_2)
<LI> mic_page2.o(i.Switch_Down_Echo_3)
<LI> mic_page2.o(i.Switch_Down_Echo_4)
<LI> mic_page2.o(i.Switch_Up_Echo_1)
<LI> mic_page2.o(i.Switch_Up_Echo_2)
<LI> mic_page2.o(i.Switch_Up_Echo_3)
<LI> mic_page2.o(i.Switch_Up_Echo_4)
</UL>
<P><STRONG><a name="[7]"></a>Mic_Main_Enter</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, mic_page2.o(i.Mic_Main_Enter))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = Mic_Main_Enter &rArr; MIC_Reverb_page2 &rArr; gui_draw_arcrectangle &rArr; gui_draw_arc &rArr; gui_draw_circle8 &rArr; gui_draw_expoint &rArr; LCD_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_pic
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIC_Reverb_page2
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIC_Frequenc_page2
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIC_Equili_page2
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIC_Echo_page2
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIC_DR_page2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> state.o(.data)
</UL>
<P><STRONG><a name="[a]"></a>Mic_Main_Esc</STRONG> (Thumb, 370 bytes, Stack size 16 bytes, mic_page2.o(i.Mic_Main_Esc))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = Mic_Main_Esc &rArr; gui_draw_arcrectangle &rArr; gui_draw_arc &rArr; gui_draw_circle8 &rArr; gui_draw_expoint &rArr; LCD_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_pic
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reverb_Show
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Noise_shold
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_qualcomm
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Frequenc_shift_Show
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Equili_Show
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Echo_Show
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DR_compress
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_draw_arcrectangle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> state.o(.data)
</UL>
<P><STRONG><a name="[6]"></a>Mic_Main_Switch_Down</STRONG> (Thumb, 168 bytes, Stack size 8 bytes, mic_page2.o(i.Mic_Main_Switch_Down))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = Mic_Main_Switch_Down &rArr; Color_especial &rArr; Color_Conver &rArr; gui_draw_arcrectangle &rArr; gui_draw_arc &rArr; gui_draw_circle8 &rArr; gui_draw_expoint &rArr; LCD_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Color_especial
</UL>
<BR>[Address Reference Count : 1]<UL><LI> state.o(.data)
</UL>
<P><STRONG><a name="[5]"></a>Mic_Main_Switch_UP</STRONG> (Thumb, 168 bytes, Stack size 8 bytes, mic_page2.o(i.Mic_Main_Switch_UP))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = Mic_Main_Switch_UP &rArr; Color_especial &rArr; Color_Conver &rArr; gui_draw_arcrectangle &rArr; gui_draw_arc &rArr; gui_draw_circle8 &rArr; gui_draw_expoint &rArr; LCD_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Color_especial
</UL>
<BR>[Address Reference Count : 1]<UL><LI> state.o(.data)
</UL>
<P><STRONG><a name="[9d]"></a>Mic_Main_interface</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, reverb.o(i.Mic_Main_interface))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = Mic_Main_interface &rArr; gui_draw_arcrectangle &rArr; gui_draw_arc &rArr; gui_draw_circle8 &rArr; gui_draw_expoint &rArr; LCD_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reverb_Show
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Noise_shold
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_qualcomm
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Frequenc_shift_Show
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Equili_Show
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Echo_Show
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DR_compress
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_draw_arcrectangle
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>Noise_shold</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, reverb.o(i.Noise_shold))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Noise_shold &rArr; LCD_ShowChar_CN &rArr; LCD_Fast_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChar_CN
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mic_Main_interface
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mic_Main_Esc
</UL>
<BR>[Address Reference Count : 2]<UL><LI> mic_page2.o(i.Mic_Main_Switch_Down)
<LI> mic_page2.o(i.Mic_Main_Switch_UP)
</UL>
<P><STRONG><a name="[f]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>PreGain_Show</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, mic_page2_1.o(i.PreGain_Show))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = PreGain_Show &rArr; LCD_ShowString &rArr; LCD_ShowChar &rArr; LCD_Fast_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIC_DR_page2
</UL>
<BR>[Address Reference Count : 2]<UL><LI> mic_page2.o(i.DR_Page2_Switch_DOWN)
<LI> mic_page2.o(i.DR_Page2_Switch_UP)
</UL>
<P><STRONG><a name="[90]"></a>RCC_AHBPeriphClockCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(i.RCC_AHBPeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GPIO_Init
</UL>

<P><STRONG><a name="[2d]"></a>Ratio_Show</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, mic_page2_1.o(i.Ratio_Show))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = Ratio_Show &rArr; LCD_ShowString &rArr; LCD_ShowChar &rArr; LCD_Fast_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIC_DR_page2
</UL>
<BR>[Address Reference Count : 2]<UL><LI> mic_page2.o(i.DR_Page2_Switch_DOWN)
<LI> mic_page2.o(i.DR_Page2_Switch_UP)
</UL>
<P><STRONG><a name="[2f]"></a>Release_Show</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, mic_page2_1.o(i.Release_Show))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = Release_Show &rArr; LCD_ShowString &rArr; LCD_ShowChar &rArr; LCD_Fast_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIC_DR_page2
</UL>
<BR>[Address Reference Count : 2]<UL><LI> mic_page2.o(i.DR_Page2_Switch_DOWN)
<LI> mic_page2.o(i.DR_Page2_Switch_UP)
</UL>
<P><STRONG><a name="[9e]"></a>Reverb_Page2_Switch_DOWN</STRONG> (Thumb, 146 bytes, Stack size 8 bytes, mic_page2.o(i.Reverb_Page2_Switch_DOWN))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = Reverb_Page2_Switch_DOWN &rArr; Color_especial &rArr; Color_Conver &rArr; gui_draw_arcrectangle &rArr; gui_draw_arc &rArr; gui_draw_circle8 &rArr; gui_draw_expoint &rArr; LCD_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Color_especial
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_state_down
</UL>

<P><STRONG><a name="[9f]"></a>Reverb_Page2_Switch_UP</STRONG> (Thumb, 146 bytes, Stack size 8 bytes, mic_page2.o(i.Reverb_Page2_Switch_UP))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = Reverb_Page2_Switch_UP &rArr; Color_especial &rArr; Color_Conver &rArr; gui_draw_arcrectangle &rArr; gui_draw_arc &rArr; gui_draw_circle8 &rArr; gui_draw_expoint &rArr; LCD_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Color_especial
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_state_up
</UL>

<P><STRONG><a name="[33]"></a>Reverb_Show</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, reverb.o(i.Reverb_Show))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Reverb_Show &rArr; LCD_ShowChar_CN &rArr; LCD_Fast_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChar_CN
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mic_Main_interface
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mic_Main_Esc
</UL>
<BR>[Address Reference Count : 2]<UL><LI> mic_page2.o(i.Mic_Main_Switch_Down)
<LI> mic_page2.o(i.Mic_Main_Switch_UP)
</UL>
<P><STRONG><a name="[3d]"></a>Reverb_Time</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, mic_page2_1.o(i.Reverb_Time))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Reverb_Time &rArr; LCD_ShowChar_CN &rArr; LCD_Fast_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChar_CN
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIC_Reverb_page2
</UL>
<BR>[Address Reference Count : 2]<UL><LI> mic_page2.o(i.Reverb_Page2_Switch_DOWN)
<LI> mic_page2.o(i.Reverb_Page2_Switch_UP)
</UL>
<P><STRONG><a name="[e]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>Seg1_Show</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, mic_page2_1.o(i.Seg1_Show))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = Seg1_Show &rArr; LCD_ShowString &rArr; LCD_ShowChar &rArr; LCD_Fast_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIC_Equili_page2
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_UP_Equili_1
</UL>
<BR>[Address Reference Count : 2]<UL><LI> mic_page2.o(i.Switch_Down_Equili_1)
<LI> mic_page2.o(i.Switch_UP_Equili_1)
</UL>
<P><STRONG><a name="[49]"></a>Seg2_Show</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, mic_page2_1.o(i.Seg2_Show))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = Seg2_Show &rArr; LCD_ShowString &rArr; LCD_ShowChar &rArr; LCD_Fast_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIC_Equili_page2
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_UP_Equili_2
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_UP_Equili_1
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Equili_2
</UL>
<BR>[Address Reference Count : 4]<UL><LI> mic_page2.o(i.Switch_Down_Equili_1)
<LI> mic_page2.o(i.Switch_Down_Equili_2)
<LI> mic_page2.o(i.Switch_UP_Equili_1)
<LI> mic_page2.o(i.Switch_UP_Equili_2)
</UL>
<P><STRONG><a name="[4b]"></a>Seg3_Show</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, mic_page2_1.o(i.Seg3_Show))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = Seg3_Show &rArr; LCD_ShowString &rArr; LCD_ShowChar &rArr; LCD_Fast_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIC_Equili_page2
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_UP_Equili_2
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_UP_Equili_1
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Equili_3
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Equili_2
</UL>
<BR>[Address Reference Count : 6]<UL><LI> mic_page2.o(i.Switch_Down_Equili_1)
<LI> mic_page2.o(i.Switch_Down_Equili_2)
<LI> mic_page2.o(i.Switch_Down_Equili_3)
<LI> mic_page2.o(i.Switch_UP_Equili_1)
<LI> mic_page2.o(i.Switch_UP_Equili_2)
<LI> mic_page2.o(i.Switch_UP_Equili_3)
</UL>
<P><STRONG><a name="[4c]"></a>Seg4_Show</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, mic_page2_1.o(i.Seg4_Show))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = Seg4_Show &rArr; LCD_ShowString &rArr; LCD_ShowChar &rArr; LCD_Fast_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIC_Equili_page2
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_UP_Equili_2
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_UP_Equili_1
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Equili_3
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Equili_2
</UL>
<BR>[Address Reference Count : 6]<UL><LI> mic_page2.o(i.Switch_Down_Equili_1)
<LI> mic_page2.o(i.Switch_Down_Equili_2)
<LI> mic_page2.o(i.Switch_Down_Equili_3)
<LI> mic_page2.o(i.Switch_UP_Equili_1)
<LI> mic_page2.o(i.Switch_UP_Equili_2)
<LI> mic_page2.o(i.Switch_UP_Equili_3)
</UL>
<P><STRONG><a name="[4d]"></a>Seg5_Show</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, mic_page2_1.o(i.Seg5_Show))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = Seg5_Show &rArr; LCD_ShowString &rArr; LCD_ShowChar &rArr; LCD_Fast_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIC_Equili_page2
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_UP_Equili_2
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_UP_Equili_1
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Equili_3
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Equili_2
</UL>
<BR>[Address Reference Count : 6]<UL><LI> mic_page2.o(i.Switch_Down_Equili_1)
<LI> mic_page2.o(i.Switch_Down_Equili_2)
<LI> mic_page2.o(i.Switch_Down_Equili_3)
<LI> mic_page2.o(i.Switch_UP_Equili_1)
<LI> mic_page2.o(i.Switch_UP_Equili_2)
<LI> mic_page2.o(i.Switch_UP_Equili_3)
</UL>
<P><STRONG><a name="[4e]"></a>Seg6_Show</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, mic_page2_1.o(i.Seg6_Show))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = Seg6_Show &rArr; LCD_ShowString &rArr; LCD_ShowChar &rArr; LCD_Fast_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIC_Equili_page2
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_UP_Equili_2
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_UP_Equili_1
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Equili_3
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Equili_2
</UL>
<BR>[Address Reference Count : 6]<UL><LI> mic_page2.o(i.Switch_Down_Equili_1)
<LI> mic_page2.o(i.Switch_Down_Equili_2)
<LI> mic_page2.o(i.Switch_Down_Equili_3)
<LI> mic_page2.o(i.Switch_UP_Equili_1)
<LI> mic_page2.o(i.Switch_UP_Equili_2)
<LI> mic_page2.o(i.Switch_UP_Equili_3)
</UL>
<P><STRONG><a name="[4f]"></a>Seg7_Show</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, mic_page2_1.o(i.Seg7_Show))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = Seg7_Show &rArr; LCD_ShowString &rArr; LCD_ShowChar &rArr; LCD_Fast_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIC_Equili_page2
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_UP_Equili_2
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_UP_Equili_1
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Equili_3
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Equili_2
</UL>
<BR>[Address Reference Count : 6]<UL><LI> mic_page2.o(i.Switch_Down_Equili_1)
<LI> mic_page2.o(i.Switch_Down_Equili_2)
<LI> mic_page2.o(i.Switch_Down_Equili_3)
<LI> mic_page2.o(i.Switch_UP_Equili_1)
<LI> mic_page2.o(i.Switch_UP_Equili_2)
<LI> mic_page2.o(i.Switch_UP_Equili_3)
</UL>
<P><STRONG><a name="[50]"></a>Seg8_Show</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, mic_page2_1.o(i.Seg8_Show))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = Seg8_Show &rArr; LCD_ShowString &rArr; LCD_ShowChar &rArr; LCD_Fast_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_UP_Equili_2
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Equili_3
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Equili_2
</UL>
<BR>[Address Reference Count : 4]<UL><LI> mic_page2.o(i.Switch_Down_Equili_2)
<LI> mic_page2.o(i.Switch_Down_Equili_3)
<LI> mic_page2.o(i.Switch_UP_Equili_2)
<LI> mic_page2.o(i.Switch_UP_Equili_3)
</UL>
<P><STRONG><a name="[51]"></a>Seg9_Show</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, mic_page2_1.o(i.Seg9_Show))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = Seg9_Show &rArr; LCD_ShowString &rArr; LCD_ShowChar &rArr; LCD_Fast_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Equili_3
</UL>
<BR>[Address Reference Count : 2]<UL><LI> mic_page2.o(i.Switch_Down_Equili_3)
<LI> mic_page2.o(i.Switch_UP_Equili_3)
</UL>
<P><STRONG><a name="[2b]"></a>Shold_Show</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, mic_page2_1.o(i.Shold_Show))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = Shold_Show &rArr; LCD_ShowString &rArr; LCD_ShowChar &rArr; LCD_Fast_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIC_DR_page2
</UL>
<BR>[Address Reference Count : 2]<UL><LI> mic_page2.o(i.DR_Page2_Switch_DOWN)
<LI> mic_page2.o(i.DR_Page2_Switch_UP)
</UL>
<P><STRONG><a name="[9]"></a>Switch_state_down</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, state.o(i.Switch_state_down))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = Switch_state_down &rArr; Equili_Page2_Switch_DOWN &rArr; Switch_Down_Equili_3 &rArr; Color_especial &rArr; Color_Conver &rArr; gui_draw_arcrectangle &rArr; gui_draw_arc &rArr; gui_draw_circle8 &rArr; gui_draw_expoint &rArr; LCD_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reverb_Page2_Switch_DOWN
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_Page2_Switch_DOWN
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Equili_Page2_Switch_DOWN
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Echo_Page2_Switch_DOWN
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DR_Page2_Switch_DOWN
</UL>
<BR>[Address Reference Count : 1]<UL><LI> state.o(.data)
</UL>
<P><STRONG><a name="[8]"></a>Switch_state_up</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, state.o(i.Switch_state_up))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = Switch_state_up &rArr; Equili_Page2_Switch_UP &rArr; Switch_UP_Equili_2 &rArr; Color_especial &rArr; Color_Conver &rArr; gui_draw_arcrectangle &rArr; gui_draw_arc &rArr; gui_draw_circle8 &rArr; gui_draw_expoint &rArr; LCD_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reverb_Page2_Switch_UP
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_Page2_Switch_UP
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Equili_Page2_Switch_UP
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Echo_Page2_Switch_UP
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DR_Page2_Switch_UP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> state.o(.data)
</UL>
<P><STRONG><a name="[a4]"></a>SysTick_CLKSourceConfig</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f0xx_misc.o(i.SysTick_CLKSourceConfig))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_init
</UL>

<P><STRONG><a name="[10]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>SystemInit</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, system_stm32f0xx.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SystemInit &rArr; SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(.text)
</UL>
<P><STRONG><a name="[1e]"></a>TIM3_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, timer.o(i.TIM3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM3_IRQHandler &rArr; TIM_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[a2]"></a>TIM_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f0xx_tim.o(i.TIM_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[a1]"></a>TIM_GetITStatus</STRONG> (Thumb, 38 bytes, Stack size 12 bytes, stm32f0xx_tim.o(i.TIM_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[98]"></a>Top_Init</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mic_page2.o(i.Top_Init))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIC_Equili_page2
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIC_Echo_page2
</UL>

<P><STRONG><a name="[42]"></a>Volume_Out_A</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, mic_page2_1.o(i.Volume_Out_A))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = Volume_Out_A &rArr; LCD_ShowString &rArr; LCD_ShowChar &rArr; LCD_Fast_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChar_CN
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIC_Echo_page2
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Up_Echo_3
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Up_Echo_2
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Up_Echo_1
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Echo_4
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Echo_3
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Echo_2
</UL>
<BR>[Address Reference Count : 8]<UL><LI> mic_page2.o(i.Switch_Down_Echo_1)
<LI> mic_page2.o(i.Switch_Down_Echo_2)
<LI> mic_page2.o(i.Switch_Down_Echo_3)
<LI> mic_page2.o(i.Switch_Down_Echo_4)
<LI> mic_page2.o(i.Switch_Up_Echo_1)
<LI> mic_page2.o(i.Switch_Up_Echo_2)
<LI> mic_page2.o(i.Switch_Up_Echo_3)
<LI> mic_page2.o(i.Switch_Up_Echo_4)
</UL>
<P><STRONG><a name="[47]"></a>Volume_Out_B</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, mic_page2_1.o(i.Volume_Out_B))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = Volume_Out_B &rArr; LCD_ShowString &rArr; LCD_ShowChar &rArr; LCD_Fast_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChar_CN
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Up_Echo_3
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Echo_4
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Echo_3
</UL>
<BR>[Address Reference Count : 4]<UL><LI> mic_page2.o(i.Switch_Down_Echo_3)
<LI> mic_page2.o(i.Switch_Down_Echo_4)
<LI> mic_page2.o(i.Switch_Up_Echo_3)
<LI> mic_page2.o(i.Switch_Up_Echo_4)
</UL>
<P><STRONG><a name="[39]"></a>Wet_voice</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, mic_page2_1.o(i.Wet_voice))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Wet_voice &rArr; LCD_ShowChar_CN &rArr; LCD_Fast_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChar_CN
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIC_Reverb_page2
</UL>
<BR>[Address Reference Count : 2]<UL><LI> mic_page2.o(i.Reverb_Page2_Switch_DOWN)
<LI> mic_page2.o(i.Reverb_Page2_Switch_UP)
</UL>
<P><STRONG><a name="[8c]"></a>WriteDAT_16</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, display_tft.o(i.WriteDAT_16))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WriteDAT_16 &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_para
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fast_DrawPoint
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPoint
</UL>

<P><STRONG><a name="[6c]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, main.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_state_up
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_state_down
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reverb_Page2_Switch_UP
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reverb_Page2_Switch_DOWN
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mic_Main_Switch_UP
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mic_Main_Switch_Down
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mic_Main_Esc
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mic_Main_Enter
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DR_Page2_Switch_UP
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DR_Page2_Switch_DOWN
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Up_Echo_4
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Up_Echo_3
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Up_Echo_2
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Up_Echo_1
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_UP_Equili_3
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_UP_Equili_2
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_UP_Equili_1
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Equili_3
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Equili_2
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Equili_1
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Echo_4
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Echo_3
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Echo_2
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Echo_1
</UL>

<P><STRONG><a name="[a3]"></a>delay_init</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, delay.o(i.delay_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = delay_init
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_CLKSourceConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[93]"></a>delay_ms</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, delay.o(i.delay_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = delay_ms &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_xms
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a6]"></a>delay_xms</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, delay.o(i.delay_xms))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>

<P><STRONG><a name="[9c]"></a>display_pic</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lcd.o(i.display_pic))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = display_pic &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_qu
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_data
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mic_Main_Esc
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mic_Main_Enter
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Up_Echo_3
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Up_Echo_2
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Up_Echo_1
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_UP_Equili_2
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_UP_Equili_1
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Equili_3
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Equili_2
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Echo_4
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Echo_3
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Echo_2
</UL>

<P><STRONG><a name="[a7]"></a>gui_draw_arc</STRONG> (Thumb, 112 bytes, Stack size 56 bytes, display_tft.o(i.gui_draw_arc))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = gui_draw_arc &rArr; gui_draw_circle8 &rArr; gui_draw_expoint &rArr; LCD_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_draw_circle8
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_draw_arcrectangle
</UL>

<P><STRONG><a name="[69]"></a>gui_draw_arcrectangle</STRONG> (Thumb, 456 bytes, Stack size 64 bytes, display_tft.o(i.gui_draw_arcrectangle))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = gui_draw_arcrectangle &rArr; gui_draw_arc &rArr; gui_draw_circle8 &rArr; gui_draw_expoint &rArr; LCD_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_fill_rectangle
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_draw_vline
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_draw_hline
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_draw_arc
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mic_Main_interface
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIC_Reverb_page2
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIC_Frequenc_page2
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIC_Equili_page2
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIC_Echo_page2
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIC_DR_page2
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mic_Main_Esc
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Up_Echo_3
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Up_Echo_2
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Up_Echo_1
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_UP_Equili_2
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_UP_Equili_1
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Equili_3
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Equili_2
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Echo_4
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Echo_3
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Echo_2
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Color_Conver
</UL>

<P><STRONG><a name="[a8]"></a>gui_draw_circle8</STRONG> (Thumb, 174 bytes, Stack size 48 bytes, display_tft.o(i.gui_draw_circle8))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = gui_draw_circle8 &rArr; gui_draw_expoint &rArr; LCD_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_draw_expoint
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_draw_arc
</UL>

<P><STRONG><a name="[ac]"></a>gui_draw_expoint</STRONG> (Thumb, 62 bytes, Stack size 40 bytes, display_tft.o(i.gui_draw_expoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = gui_draw_expoint &rArr; LCD_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_draw_circle8
</UL>

<P><STRONG><a name="[aa]"></a>gui_draw_hline</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, display_tft.o(i.gui_draw_hline))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = gui_draw_hline &rArr; LCD_Fill &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_draw_arcrectangle
</UL>

<P><STRONG><a name="[ab]"></a>gui_draw_vline</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, display_tft.o(i.gui_draw_vline))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = gui_draw_vline &rArr; LCD_Fill &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_draw_arcrectangle
</UL>

<P><STRONG><a name="[a9]"></a>gui_fill_rectangle</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, display_tft.o(i.gui_fill_rectangle))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = gui_fill_rectangle &rArr; LCD_Fill &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_draw_arcrectangle
</UL>

<P><STRONG><a name="[5b]"></a>main</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = main &rArr; Mic_Main_interface &rArr; gui_draw_arcrectangle &rArr; gui_draw_arc &rArr; gui_draw_circle8 &rArr; gui_draw_expoint &rArr; LCD_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_pic
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_init
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mic_Main_interface
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Scan
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Init
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitFsm
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSM_EventHandle
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[a0]"></a>SetSysClock</STRONG> (Thumb, 322 bytes, Stack size 12 bytes, system_stm32f0xx.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetSysClock
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[68]"></a>Color_Conver</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, mic_page2.o(i.Color_Conver))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = Color_Conver &rArr; gui_draw_arcrectangle &rArr; gui_draw_arc &rArr; gui_draw_circle8 &rArr; gui_draw_expoint &rArr; LCD_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_draw_arcrectangle
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Color_especial
</UL>

<P><STRONG><a name="[6a]"></a>Color_especial</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, mic_page2.o(i.Color_especial))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = Color_especial &rArr; Color_Conver &rArr; gui_draw_arcrectangle &rArr; gui_draw_arc &rArr; gui_draw_circle8 &rArr; gui_draw_expoint &rArr; LCD_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Color_Conver
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reverb_Page2_Switch_UP
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reverb_Page2_Switch_DOWN
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mic_Main_Switch_UP
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mic_Main_Switch_Down
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_Page2_Switch_UP
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_Page2_Switch_DOWN
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DR_Page2_Switch_UP
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DR_Page2_Switch_DOWN
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Up_Echo_4
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Up_Echo_3
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Up_Echo_2
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Up_Echo_1
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_UP_Equili_3
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_UP_Equili_2
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_UP_Equili_1
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Equili_3
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Equili_2
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Equili_1
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Echo_4
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Echo_3
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Echo_2
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Down_Echo_1
</UL>

<P><STRONG><a name="[6f]"></a>Switch_Down_Echo_1</STRONG> (Thumb, 148 bytes, Stack size 8 bytes, mic_page2.o(i.Switch_Down_Echo_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = Switch_Down_Echo_1 &rArr; Color_especial &rArr; Color_Conver &rArr; gui_draw_arcrectangle &rArr; gui_draw_arc &rArr; gui_draw_circle8 &rArr; gui_draw_expoint &rArr; LCD_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Color_especial
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Echo_Page2_Switch_DOWN
</UL>

<P><STRONG><a name="[70]"></a>Switch_Down_Echo_2</STRONG> (Thumb, 266 bytes, Stack size 16 bytes, mic_page2.o(i.Switch_Down_Echo_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = Switch_Down_Echo_2 &rArr; Color_especial &rArr; Color_Conver &rArr; gui_draw_arcrectangle &rArr; gui_draw_arc &rArr; gui_draw_circle8 &rArr; gui_draw_expoint &rArr; LCD_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_pic
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Volume_Out_A
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Delay_B
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Delay_A
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Filter_A
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Feedback_Value_B
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Feedback_Value_A
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Advance_Delay_B
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Color_especial
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_draw_arcrectangle
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Echo_Page2_Switch_DOWN
</UL>

<P><STRONG><a name="[71]"></a>Switch_Down_Echo_3</STRONG> (Thumb, 266 bytes, Stack size 16 bytes, mic_page2.o(i.Switch_Down_Echo_3))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = Switch_Down_Echo_3 &rArr; Color_especial &rArr; Color_Conver &rArr; gui_draw_arcrectangle &rArr; gui_draw_arc &rArr; gui_draw_circle8 &rArr; gui_draw_expoint &rArr; LCD_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_pic
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Volume_Out_B
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Volume_Out_A
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Delay_B
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Filter_A
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Feedback_Value_B
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Feedback_Value_A
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Advance_Delay_B
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Color_especial
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_draw_arcrectangle
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Echo_Page2_Switch_DOWN
</UL>

<P><STRONG><a name="[72]"></a>Switch_Down_Echo_4</STRONG> (Thumb, 278 bytes, Stack size 16 bytes, mic_page2.o(i.Switch_Down_Echo_4))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = Switch_Down_Echo_4 &rArr; Color_especial &rArr; Color_Conver &rArr; gui_draw_arcrectangle &rArr; gui_draw_arc &rArr; gui_draw_circle8 &rArr; gui_draw_expoint &rArr; LCD_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_pic
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Volume_Out_B
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Volume_Out_A
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Delay_B
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Filter_B
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Filter_A
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Feedback_Value_B
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Advance_Delay_B
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Color_especial
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_draw_arcrectangle
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Echo_Page2_Switch_DOWN
</UL>

<P><STRONG><a name="[79]"></a>Switch_Down_Equili_1</STRONG> (Thumb, 148 bytes, Stack size 8 bytes, mic_page2.o(i.Switch_Down_Equili_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = Switch_Down_Equili_1 &rArr; Color_especial &rArr; Color_Conver &rArr; gui_draw_arcrectangle &rArr; gui_draw_arc &rArr; gui_draw_circle8 &rArr; gui_draw_expoint &rArr; LCD_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Color_especial
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Equili_Page2_Switch_DOWN
</UL>

<P><STRONG><a name="[7a]"></a>Switch_Down_Equili_2</STRONG> (Thumb, 266 bytes, Stack size 16 bytes, mic_page2.o(i.Switch_Down_Equili_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = Switch_Down_Equili_2 &rArr; Color_especial &rArr; Color_Conver &rArr; gui_draw_arcrectangle &rArr; gui_draw_arc &rArr; gui_draw_circle8 &rArr; gui_draw_expoint &rArr; LCD_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_pic
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seg8_Show
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seg7_Show
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seg6_Show
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seg5_Show
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seg4_Show
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seg3_Show
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seg2_Show
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Color_especial
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_draw_arcrectangle
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Equili_Page2_Switch_DOWN
</UL>

<P><STRONG><a name="[7b]"></a>Switch_Down_Equili_3</STRONG> (Thumb, 280 bytes, Stack size 16 bytes, mic_page2.o(i.Switch_Down_Equili_3))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = Switch_Down_Equili_3 &rArr; Color_especial &rArr; Color_Conver &rArr; gui_draw_arcrectangle &rArr; gui_draw_arc &rArr; gui_draw_circle8 &rArr; gui_draw_expoint &rArr; LCD_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_pic
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seg9_Show
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seg8_Show
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seg7_Show
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seg6_Show
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seg5_Show
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seg4_Show
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seg3_Show
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Color_especial
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_draw_arcrectangle
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Equili_Page2_Switch_DOWN
</UL>

<P><STRONG><a name="[7f]"></a>Switch_UP_Equili_1</STRONG> (Thumb, 280 bytes, Stack size 16 bytes, mic_page2.o(i.Switch_UP_Equili_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = Switch_UP_Equili_1 &rArr; Color_especial &rArr; Color_Conver &rArr; gui_draw_arcrectangle &rArr; gui_draw_arc &rArr; gui_draw_circle8 &rArr; gui_draw_expoint &rArr; LCD_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_pic
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seg7_Show
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seg6_Show
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seg5_Show
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seg4_Show
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seg3_Show
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seg2_Show
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seg1_Show
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Color_especial
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_draw_arcrectangle
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Equili_Page2_Switch_UP
</UL>

<P><STRONG><a name="[7e]"></a>Switch_UP_Equili_2</STRONG> (Thumb, 264 bytes, Stack size 16 bytes, mic_page2.o(i.Switch_UP_Equili_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = Switch_UP_Equili_2 &rArr; Color_especial &rArr; Color_Conver &rArr; gui_draw_arcrectangle &rArr; gui_draw_arc &rArr; gui_draw_circle8 &rArr; gui_draw_expoint &rArr; LCD_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_pic
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seg8_Show
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seg7_Show
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seg6_Show
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seg5_Show
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seg4_Show
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seg3_Show
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seg2_Show
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Color_especial
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_draw_arcrectangle
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Equili_Page2_Switch_UP
</UL>

<P><STRONG><a name="[7d]"></a>Switch_UP_Equili_3</STRONG> (Thumb, 148 bytes, Stack size 8 bytes, mic_page2.o(i.Switch_UP_Equili_3))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = Switch_UP_Equili_3 &rArr; Color_especial &rArr; Color_Conver &rArr; gui_draw_arcrectangle &rArr; gui_draw_arc &rArr; gui_draw_circle8 &rArr; gui_draw_expoint &rArr; LCD_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Color_especial
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Equili_Page2_Switch_UP
</UL>

<P><STRONG><a name="[77]"></a>Switch_Up_Echo_1</STRONG> (Thumb, 280 bytes, Stack size 16 bytes, mic_page2.o(i.Switch_Up_Echo_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = Switch_Up_Echo_1 &rArr; Color_especial &rArr; Color_Conver &rArr; gui_draw_arcrectangle &rArr; gui_draw_arc &rArr; gui_draw_circle8 &rArr; gui_draw_expoint &rArr; LCD_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_pic
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Volume_Out_A
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Delay_B
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Delay_A
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Filter_A
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Feedback_Value_A
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Advance_Delay_B
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Advance_Delay_A
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Color_especial
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_draw_arcrectangle
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Echo_Page2_Switch_UP
</UL>

<P><STRONG><a name="[76]"></a>Switch_Up_Echo_2</STRONG> (Thumb, 264 bytes, Stack size 16 bytes, mic_page2.o(i.Switch_Up_Echo_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = Switch_Up_Echo_2 &rArr; Color_especial &rArr; Color_Conver &rArr; gui_draw_arcrectangle &rArr; gui_draw_arc &rArr; gui_draw_circle8 &rArr; gui_draw_expoint &rArr; LCD_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_pic
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Volume_Out_A
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Delay_B
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Delay_A
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Filter_A
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Feedback_Value_B
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Feedback_Value_A
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Advance_Delay_B
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Color_especial
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_draw_arcrectangle
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Echo_Page2_Switch_UP
</UL>

<P><STRONG><a name="[75]"></a>Switch_Up_Echo_3</STRONG> (Thumb, 264 bytes, Stack size 16 bytes, mic_page2.o(i.Switch_Up_Echo_3))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = Switch_Up_Echo_3 &rArr; Color_especial &rArr; Color_Conver &rArr; gui_draw_arcrectangle &rArr; gui_draw_arc &rArr; gui_draw_circle8 &rArr; gui_draw_expoint &rArr; LCD_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_pic
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Volume_Out_B
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Volume_Out_A
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Delay_B
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Filter_A
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Feedback_Value_B
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Feedback_Value_A
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Advance_Delay_B
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Color_especial
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_draw_arcrectangle
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Echo_Page2_Switch_UP
</UL>

<P><STRONG><a name="[74]"></a>Switch_Up_Echo_4</STRONG> (Thumb, 148 bytes, Stack size 8 bytes, mic_page2.o(i.Switch_Up_Echo_4))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = Switch_Up_Echo_4 &rArr; Color_especial &rArr; Color_Conver &rArr; gui_draw_arcrectangle &rArr; gui_draw_arc &rArr; gui_draw_circle8 &rArr; gui_draw_expoint &rArr; LCD_DrawPoint &rArr; LCD_qu &rArr; LCD_WR_para
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Color_especial
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Echo_Page2_Switch_UP
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[63]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>
